service: session-service
frameworkVersion: ">=3.22.0"

provider:
  name: aws
  runtime: provided.al2
  stage: dev
  region: ${env:AWS_DEFAULT_REGION, 'eu-west-2'}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - Fn::GetAtt: [sessionsTable, Arn]

package:
  artifact:
    - .serverless/session-service.zip

functions:
  getSession:
    handler: clicker-game-server/src/api/session.get
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    memorySize: 128
    description: Get session by id
    events:
      - http:
          path: session/{id}
          method: get
  createSession:
    handler: clicker-game-server/src/api/session.create
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    memorySize: 128
    description: Create a session
    events:
      - http:
          path: session/create
          method: put

resources:
  Transform: AWS::Serverless-2016-10-31
  Resources:
    Deno:
      Type: AWS::Serverless::Application
      Properties:
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:390065572566:applications/deno
          SemanticVersion: 1.25.2

    sessionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sessions
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-scriptable-plugin

custom:
  scriptHooks:
    before:package:createDeploymentArtifacts: bash ./scripts/serverless/package.sh
